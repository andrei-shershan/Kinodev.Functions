trigger:
  branches:
    include:
      - main

variables:
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: 'Build and Publish'
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: UseDotNet@2
        displayName: 'Use .NET SDK'
        inputs:
          packageType: 'sdk'
          version: '8.0.x'

      - script: dotnet restore AzureFunctionsApp.Functions.csproj
        displayName: 'Restore dependencies'

      - script: dotnet build AzureFunctionsApp.Functions.csproj --configuration $(buildConfiguration) --no-restore
        displayName: 'Build project'

      - script: dotnet publish AzureFunctionsApp.Functions.csproj --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/publish
        displayName: 'Publish artifacts'

      - task: ArchiveFiles@2
        displayName: 'Archive published files'
        inputs:
          rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/publish'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/functionapp.zip'
          replaceExistingArchive: true

      - publish: '$(Build.ArtifactStagingDirectory)/functionapp.zip'
        artifact: drop

- stage: Deploy
  displayName: 'Deploy to Azure Functions'
  dependsOn: Build
  jobs:
  - deployment: DeployFunction
    displayName: 'Deploy Function App'
    environment: 'kinodev-live'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
            - download: current
              artifact: drop

            - task: AzureFunctionApp@1
              displayName: 'Deploy to Function App'
              inputs:
                azureSubscription: '$(AZURE_SERVICE_CONNECTION)'
                appType: functionApp
                appName: '$(AZURE_FUNCTION_NAME)'
                package: '$(Pipeline.Workspace)/drop/functionapp.zip'
